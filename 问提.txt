spring的bean生命周期
Spring启动，查找并加载需要被Spring管理的bean，进行Bean的实例化
Bean实例化后对将Bean的引入和值注入到Bean的属性中
Bean是否实现aware接口
调用BeanNameAware接口中setBeanName
调用BeanFactoryAware接口setBeanFactory方法
调用ApplicationAware接口setApplicationAware方法
调用BeanPostProcessor接口的预初始化方法
调用InitializingBean的afterProperties Set()的方法
调用自定义初始化方法
调用BeanPostProcessor接口的预初始化后方法
使用Bean
容器关闭后，调用DisposableBean的方destory()方法
调用自定义销毁方法
结束

spring如何解决循环依赖
通过三层循环依赖
singletonObjects
earlySingletonObjects
singletonFactories

jvm内存模型，以及遇到的OOM都有哪些
方法区
堆
虚拟机栈
本地方法栈
程序计数器

java.lang.OutOfMemoryError: Java heap space ------>java堆内存溢出，
此种情况最常见，一般由于内存泄露或者堆的大小设置不当引起。对于内存泄露，需要通过内存监控软件查找程序中的泄露代码，而堆大小可以通过虚拟机参数-Xms,-Xmx等修改。
java.lang.OutOfMemoryError: PermGen space ------>java永久代溢出，
即方法区溢出了，一般出现于大量Class或者jsp页面，或者采用cglib等反射机制的情况，因为上述情况会产生大量的Class信息存储于方法区。此种情况可以通过更改方法区的大小来解决，使用类似-XX:PermSize=64m -XX:MaxPermSize=256m的形式修改。另外，过多的常量尤其是字符串也会导致方法区溢出。
java.lang.StackOverflowError ------> 不会抛OOM error，
但也是比较常见的Java内存溢出。JAVA虚拟机栈溢出，一般是由于程序中存在死循环或者深度递归调用造成的，栈大小设置太小也会出现此种溢出。可以通过虚拟机参数-Xss来设置栈的大小。


kafka如果解决消息重复消费，kafka在项目中怎么用的

es和传统数据库的区别

超卖问题如何解决

CAS单点登陆流程

事务除了发生异常回滚，还会怎么回滚

5个人过桥，分别需要1、3、6、8、12秒，一盏灯，怎么在30秒内通过

抽象方法是否可以被static、native、synchronized修饰
都不可以

手写存储过程

变态跳台阶问题

sql优化，提高查询效率

redis的缓存雪崩、缓存穿透、缓存击穿概念
缓存雪崩，是指在某一个时间段，缓存集中过期失效。
所有原本应该访问缓存的请求都去查询数据库了，而对数据库CPU和内存造成巨大压力，严重的会造成数据库宕机。从而形成一系列连锁反应，造成整个系统崩溃。

缓存穿透是指查询一个一定不存在的数据。
由于缓存不命中，并且出于容错考虑，如果从数据库查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到数据库去查询，失去了缓存的意义。

缓存击穿指的是热点key在某个特殊的场景时间内恰好失效了，恰好有大量并发请求过来了，造成DB压力。
其实缓存击穿和缓存雪崩从概念上来讲差不多，只是缓存击穿是某些热点key，而雪崩指的是大规模的key。

缓存降级是指当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，
仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。

缓存预热也是一个比较常见的概念，缓存预热就是系统上线后，将相关的缓存数据直接加载到缓存系统。
这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题。用户直接查询事先被预热的缓存数据。

如何根据一个功能，设计数据库表

微服务设计边界

常用的设计模式

如何设计一个抢票程序

如何建索引，哪些列适合建索引、哪些列不适合建索引

maven生命周期

git常用命令、HashMap、HashSet底层

如何将一个集合变成只读集合

红黑树的5个特点

BIO、NIO、AIO的区别

Nginx负载均衡方式

使用es，一天的数据量多大

MySQL事务级别，以及解决的问题，尤其记得MySQL事务的可重复读，可以解决脏读、不可重复读、幻读，因为MySQL有个Next-key Lock

MySQL失效的情况中，隐式转换，列为varchar，等号右边是 数字，索引失效；列为number，等号右边是类似于"10"这种的,索引不失效

///////////////////////https://www.cnblogs.com/jelly12345/p/12660740.html
在mysql查询中，当查询条件左右两侧类型不匹配的时候会发生隐式转换，可能导致查询无法使用索引。下面分析两种隐式转换的情况。
第一种情况：索引字段是varchar类型
select * from user where index_filed=2;
因为等号两侧类型不一致，因此会发生隐式转换，cast(index_filed as signed)，然后和2进行比较。因为'2'，'   2'，'2a'都会转化成2，故MySQL无法使用索引只能进行全表扫描，造成了慢查询的产生。


第二种情况：索引字段是int类型
select * from user where index_filed='2';
这次等号右侧是'2'，注意带单引号哟，左侧的索引字段是int类型，因此也会发生隐式转换，但因为int类型的数字只有2能转化为'2'，是唯一确定的。所以虽然需要隐式转换，但不影响使用索引，不会导致慢查询。

//////////////////////////////////////

红黑树是什么？特点是什么？





#####################################################################

使用xxl-job干什么，为什么不用spring的scheduled

#####################################################################

如何看待加班

介绍项目

职业规划

个人优缺点

为什么离职

有什么进步

项目中的难点

你对我们公司有了解吗


######################################################袁业涵面到的

nio,bio,aio原理及区别

线程池，synchronize原理及改进，volatile原理，详述内存屏障原理，

类加载，垃圾回收器，cms问题，对象头，内存模型等等。

Spring事务，AOP,  IOC

@Resource和@Autowired区别

Spring涉及到的设计模式，详述

springMVC   0xml原理，找controller流程，甚至具体流程

springBoot自动装配原理

如果不用springBoot，能不能实现相同的效果，

mybatis找到sql的原理

如果出现问题，系统慢慢被拖挂了，mysql优化步骤

mysql执行计划

mysql索引结构，b+,b树，b*树区别，详述b+树

红黑树原理

redis都用过哪些结构，分别实现什么功能

redis cluster扩容如何实现最小迁移

缓存雪崩，穿透，击穿，缓存一致性问题

zookeeper上服务挂了，如何通知

分布式id,分布式事务，分布式锁等

消息队列，顺序性，遗漏，重复，一致性问题解决方案

maven两个依赖同一个jar,如何处理
